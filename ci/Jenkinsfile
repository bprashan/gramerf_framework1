def g_gramerf_lib
def g_nodelabel

pipeline {
    agent {
        label 'JK_POOL_MASTER'
    }
    stages {
        stage('setup') {
            environment {
                GRAMERF_GROOVY_LIB='ci/lib/gramerf-groovy-lib.groovy'
            }
            steps {
                script {
                    checkout scm
                    echo "Loading groovy library: ${env.GRAMERF_GROOVY_LIB}"
                    g_gramerf_lib = load(env.GRAMERF_GROOVY_LIB)
                    g_gramerf_lib.preActions()
                    g_nodelabel = g_gramerf_lib.getNodeName()
                    if (g_gramerf_lib.restartNode(g_nodelabel)){
                        echo "restarted $g_nodelabel successfully..."
                    } else {
                        error "Able to restart the execution node $g_nodelabel ..."
                    }
                }
            }
            post {
                always {
                    cleanWs()
                }
            }
        }
        stage('run performance benchmarking'){
            steps {
                script {
                     g_gramerf_lib.run_perf(g_nodelabel)
                }
            }
            post {
                always {
                    script{
                        g_gramerf_lib.download_artifacts()
                    }
                }
            }
        }
    }
}